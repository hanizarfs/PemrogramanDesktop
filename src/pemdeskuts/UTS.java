/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pemdeskuts;

import static com.sun.webkit.perf.WCFontPerfLogger.reset;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author hanizar
 */
public class UTS extends javax.swing.JFrame {

    /**
     * Creates new form UTS
     */
    public UTS() {
        initComponents();
        String namas[] = {"Adi", "Budi", "Caca", "Dina", "Erpan"};
        String sekolahs[] = {"SMA N 1 Kawali", "SMA N 2 Kawali", "SMA N 3 Kawali", "SMA N 4 Kawali", "SMA N 5 Kawali"};
        String alamats[] = {"Surakarta", "Klaten", "Jogja", "Sragen", "Boyolali"};
        String nilais[] = {"90", "80", "95", "70", "65"};
        String keterangans[] = {"LULUS", "CADANGAN", "LULUS", "CADANGAN", "GAGAL"};
        DefaultTableModel tbl = (DefaultTableModel) tableMahasiswa.getModel();
        for (int i = 0; i < namas.length; i++) {
            Object[] row = new Object[]{namas[i], sekolahs[i], alamats[i], nilais[i], keterangans[i]};
            tbl.addRow(row);
        }
    }

    private void filter(String query) {
        DefaultTableModel tbl = (DefaultTableModel) tableFilter.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(tbl);
        tableFilter.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputFilter = new javax.swing.ButtonGroup();
        buttonHapus = new javax.swing.JButton();
        buttonTambah = new javax.swing.JButton();
        inputNilai = new javax.swing.JTextField();
        inputSekolah = new javax.swing.JTextField();
        inputNama = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMahasiswa = new javax.swing.JTable();
        inputCadangan = new javax.swing.JRadioButton();
        inputLulus = new javax.swing.JRadioButton();
        inputAlamat = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableFilter = new javax.swing.JTable();
        inputPencarian = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonHapus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttonHapus.setText("Hapus");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        buttonTambah.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttonTambah.setText("Tambah");
        buttonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahActionPerformed(evt);
            }
        });

        inputNilai.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        inputSekolah.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        inputNama.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Nama");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Sekolah");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Alamat");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Nilai");

        tableMahasiswa.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tableMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Sekolah", "Alamat", "Nilai", "Keterangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableMahasiswa);

        inputFilter.add(inputCadangan);
        inputCadangan.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        inputCadangan.setText("Cadangan");
        inputCadangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCadanganActionPerformed(evt);
            }
        });

        inputFilter.add(inputLulus);
        inputLulus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        inputLulus.setText("Lulus");
        inputLulus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputLulusActionPerformed(evt);
            }
        });

        inputAlamat.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        inputAlamat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Surakarta", "Boyolali", "Sukoharjo", "Karanganyar", "Wonogiri", "Sragen", "Klaten" }));
        inputAlamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAlamatActionPerformed(evt);
            }
        });

        tableFilter.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tableFilter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Sekolah", "Alamat", "Nilai", "Keterangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableFilterMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableFilter);

        inputPencarian.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        inputPencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPencarianActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(inputAlamat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inputNilai)
                                    .addComponent(inputSekolah)
                                    .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputLulus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputCadangan)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputSekolah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputNilai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonHapus)
                            .addComponent(buttonTambah)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputCadangan)
                    .addComponent(inputLulus))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        DefaultTableModel tbl = (DefaultTableModel) tableMahasiswa.getModel();
        if (tableMahasiswa.getSelectedRow() == -1) {
            if (tableMahasiswa.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Pilih data yang ingin di hapus!");
            } else {
                JOptionPane.showMessageDialog(null, "Pilih data yang ingin di hapus!");
            }
        } else {
            tbl.removeRow(tableMahasiswa.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Berhasil menghapus data");
        }
        reset();
    }//GEN-LAST:event_buttonHapusActionPerformed

    private void buttonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) tableMahasiswa.getModel();
        
        String inputFilter = " ";
        if (inputLulus.isSelected()) {
            inputFilter = "LULUS";
        } else if (inputCadangan.isSelected()) {
            inputFilter = "CADANGAN";
        }
        
        String[] namas = new String[]{inputNama.getText()};
        String[] sekolahs = new String[]{inputSekolah.getText()};
        String nilais[] = new String[]{inputNilai.getText()};
        int x = Integer.parseInt(inputNilai.getText());

        // List Alamat
        String listAlamat = (String) inputAlamat.getSelectedItem();
        String alamat = "-";
        switch (listAlamat) {
            case "Surakarta":
                alamat = "Surakarta";
                break;
            case "Boyolali":
                alamat = "Boyolali";
                break;
            case "Sukoharjo":
                alamat = "Sukoharjo";
                break;
            case "Karanganyar":
                alamat = "Karanganyar";
                break;
            case "Wonogiri":
                alamat = "Wonogiri";
                break;
            case "Sragen":
                alamat = "Sragen";
                break;
            case "Klaten":
                alamat = "Klaten";
                break;
        }

        String keterangan;
        if (x >= 85) {
            keterangan = "LULUS";
        } else if (x >= 70) {
            keterangan = "CADANGAN";
        } else {
            keterangan = "GAGAL";
        }
        String keterangans[] = new String[]{keterangan};
        if ((namas[0].length() == 0) || (sekolahs[0].length() == 0) || (nilais[0].length() == 0)) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh ada yang kosong!");
        } else {
            Object[] row;
            for (int a = 0; a < namas.length; a++) {
                row = new Object[]{namas[a], sekolahs[a], alamat, nilais[a], keterangans[a]};
                tableModel.addRow(row);
                JOptionPane.showMessageDialog(null, "Berhasil menambah data");
            }
        }
    }//GEN-LAST:event_buttonTambahActionPerformed

    private void tableMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMahasiswaMouseClicked
        DefaultTableModel tbl = (DefaultTableModel) tableMahasiswa.getModel();
        String nama = (String) tbl.getValueAt(tableMahasiswa.getSelectedRow(), 0);
        String sekolah = (String) tbl.getValueAt(tableMahasiswa.getSelectedRow(), 1);
        String nilai = (String) tbl.getValueAt(tableMahasiswa.getSelectedRow(), 3);
        inputNama.setText(nama);
        inputSekolah.setText(sekolah);
        inputNilai.setText(nilai);
    }//GEN-LAST:event_tableMahasiswaMouseClicked

    private void inputCadanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCadanganActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableMahasiswa.getModel();
        DefaultTableModel modelFilter = (DefaultTableModel) tableFilter.getModel();
        int rowCount = model.getRowCount();
        int filterRowCount = modelFilter.getRowCount();
        for (int i = filterRowCount - 1; i >= 0; i--) {
            modelFilter.removeRow(i);
        }
        for (int i = rowCount - 1; i >= 0; i--) {
            Object objNilai = tableMahasiswa.getValueAt(i, 3);
            int nilai = Integer.valueOf((String) objNilai);
            if ((nilai < 85) && (nilai >= 70)) {
                String namas = (String) model.getValueAt(i, 0);
                String sekolahs = (String) model.getValueAt(i, 1);
                String alamats = (String) model.getValueAt(i, 2);
                String keterangans = (String) model.getValueAt(i, 4);
                Object[] row = new Object[]{
                    namas, sekolahs, alamats, nilai, keterangans
                };
                modelFilter.addRow(row);
            }
        }
    }//GEN-LAST:event_inputCadanganActionPerformed

    private void inputLulusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputLulusActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableMahasiswa.getModel();
        DefaultTableModel modelFilter = (DefaultTableModel) tableFilter.getModel();
        int rowCount = model.getRowCount();
        int filterRowCount = modelFilter.getRowCount();
        for (int i = filterRowCount - 1; i >= 0; i--) {
            modelFilter.removeRow(i);
        }
        for (int i = rowCount - 1; i >= 0; i--) {
            Object objNilai = tableMahasiswa.getValueAt(i, 3);
            int nilai = Integer.valueOf((String) objNilai);
            if (nilai >= 85) {
                String namas = (String) model.getValueAt(i, 0);
                String sekolahs = (String) model.getValueAt(i, 1);
                String alamats = (String) model.getValueAt(i, 2);
                String keterangans = (String) model.getValueAt(i, 4);
                Object[] row = new Object[]{
                    namas, sekolahs, alamats, nilai, keterangans
                };
                modelFilter.addRow(row);
            }
        }
    }//GEN-LAST:event_inputLulusActionPerformed

    private void inputAlamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAlamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAlamatActionPerformed

    private void tableFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFilterMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableFilterMouseClicked

    private void inputPencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPencarianActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableMahasiswa.getModel();
        DefaultTableModel modelFilter = (DefaultTableModel) tableFilter.getModel();
        int rowCount = model.getRowCount();
        int filterRowCount = modelFilter.getRowCount();
        for (int i = filterRowCount - 1; i >= 0; i--) {
            modelFilter.removeRow(i);
        }
        for (int i = rowCount - 1; i >= 0; i--) {
            Object objNilai = tableMahasiswa.getValueAt(i, 3);
            String namas = (String) model.getValueAt(i, 0);
            String sekolahs = (String) model.getValueAt(i, 1);
            String alamats = (String) model.getValueAt(i, 2);
            int nilai = Integer.valueOf((String) objNilai);
            String keterangans = (String) model.getValueAt(i, 4);
            Object[] row = new Object[]{
                namas, sekolahs, alamats, nilai, keterangans
            };
            modelFilter.addRow(row);
        }
        String query = inputPencarian.getText();
        filter(query);
    }//GEN-LAST:event_inputPencarianActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UTS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonTambah;
    private javax.swing.JComboBox<String> inputAlamat;
    private javax.swing.JRadioButton inputCadangan;
    private javax.swing.ButtonGroup inputFilter;
    private javax.swing.JRadioButton inputLulus;
    private javax.swing.JTextField inputNama;
    private javax.swing.JTextField inputNilai;
    private javax.swing.JTextField inputPencarian;
    private javax.swing.JTextField inputSekolah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableFilter;
    private javax.swing.JTable tableMahasiswa;
    // End of variables declaration//GEN-END:variables
}
